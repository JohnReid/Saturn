#!/usr/bin/env python
doc = """Usage: score-predictions [-t TSV] PREDICTIONSFILE...

Options:
  -t --tsv TSV    Write scores to TSV [default=scores.tsv]
"""


#
# Load libraries
#
from docopt import docopt
from sklearn.metrics import precision_recall_curve, roc_curve, auc
import pandas as pd


def recall_at_fdr(fdr_cutoff=0.05):
    "Calculate the recall at a given FDR."
    fdr = 1 - precision
    cutoff_index = next(i for i, x in enumerate(1 - precision) if x <= fdr_cutoff)
    return recall[cutoff_index]


#
# Parse options
#
opts = docopt(doc)
predfiles = opts['PREDICTIONSFILE']
tsvfile = opts['--tsv']


#
# Set up data frame
#
fdr_cutoffs = (.05, .10, .25, .50)
data = np.empty((len(predfiles), 2 + len(fdr_cutoffs)))


#
# For each predictions file
#
for i, predictionsfile in enumerate(predfiles):
    #
    # Load predictions
    #
    predictions = pd.read_table(
        predictionsfile,
        names = ['chrom', 'start', 'end', 'pred', 'bound'])
    y_true = (predictions.bound == 'B').values
    y_score = predictions.pred.values


    #
    # Do ROC analysis
    #
    fpr, tpr, rocthresholds = roc_curve(y_true, y_score)
    auroc = auc(fpr, tpr)


    #
    # Do precision-recall analysis
    #
    precision, recall, prthresholds = precision_recall_curve(y_true, y_score)
    auprc = auc(recall, precision)


    #
    # Analyse recall at different FDRs
    #
    recallatcutoffs = map(recall_at_fdr, fdr_cutoffs)


    #
    # Update data
    #
    data[i,0] = auroc
    data[i,1] = auprc
    data[i,2:] = recallatcutoffs

    #
    # Print results
    #
    print('AUROC={:.3f}; AUPRC={:.3f}; recall@{}={:.6f}; recall@{}={:.6f}; recall@{}={:.6f}; recall@{}={:.6f}; {}'.format(
        auroc, auprc,
        fdr_cutoffs[0], recallatcutoffs[0],
        fdr_cutoffs[1], recallatcutoffs[1],
        fdr_cutoffs[2], recallatcutoffs[2],
        fdr_cutoffs[3], recallatcutoffs[3],
        predictionsfile))

#
# Create data frame
#
reccols = map(lambda c: 'recall_{:02d}'.format(int(100*c)), fdr_cutoffs)
colnames = ['AUROC', 'AUPRC'] + list(reccols)
df = pd.DataFrame(data=data, columns=colnames)
df['file'] = pd.Series(predfiles, index=df.index)
print(df)
df.to_csv(tsvfile, sep='\t', index=False)

