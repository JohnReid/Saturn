#!/bin/bash -e
#
# Merge the DNase-seq reads for one cell type.
#


#
# sbatch directives
#
#SBATCH -p mrc-bsu-sand                 # Partition
#SBATCH -J DNASEMERGE                   # Name of the job
#SBATCH -A MRC-BSU-SL2                  # Which project should be charged
#SBATCH --nodes=1                       # How many whole nodes should be allocated?
#SBATCH --ntasks=1                      # How many (MPI) tasks will there be in total? (<= nodes*16)
#SBATCH --mem=32000                     # How many MB each node is allocated
#SBATCH --time=06:00:00                 # How much wallclock time will be required?
#SBATCH -o dnase-merge-%j.out           # stdout
#SBATCH -e dnase-merge-%j.out           # stderr
#SBATCH --mail-type=FAIL                # What types of email messages do you wish to receive?
##SBATCH --no-requeue                   # Uncomment this to prevent the job from being requeued (e.g. if
                                        # interrupted by node failure or system downtime):

#
# Update modules
#
if [ 'login-mrc-bsu' == $(hostname) ]
then
    #! Optionally modify the environment seen by the application
    #! (note that SLURM reproduces the environment at submission irrespective of ~/.bashrc):
    . /etc/profile.d/modules.sh                # Leave this line (enables the module command)
    module purge                               # Removes all modules still loaded
    module load default-impi                   # REQUIRED - loads the basic environment
    module load samtools/1.2
fi

#
# Parse arguments
#
USAGE="USAGE: $0 <CELL>"
CELL=${1?:$USAGE}
echo "CELL: $CELL"


#
# Set up variables
#
DATADIR=/home/jer15/Dev/Saturn/Data/DNASE/bams
CHRS="chr1  chr2  chr3  chr4  chr5  chr6  chr7  chr8  chr9  chr10 \
      chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chr20 \
      chr21 chr22 chrX"
SCRATCH=/scratch/jer15
INPUTBAMS=$(ls $DATADIR/DNASE.$CELL.biorep*.techrep*.bam)
FILTERED=$SCRATCH/bam-merge-$CELL-filtered-$$.bam
OUTPUT=$DATADIR/DNASE.$CELL.merged.bam

#
# Check if output already exists
#
if [ -f "$OUTPUT" ]
then
    echo "Output already exists: $OUTPUT"
    exit -1
fi

#
# Merge input files if we have more than one
#
if [ $(wc -w <<< "$INPUTBAMS") -eq 1 ]
then
    MERGED=$INPUTBAMS
    DELETEMERGED=""
    echo "Not merging as only have one input file: $MERGED"
else
    MERGED=$SCRATCH/bam-merge-$CELL-merged-$$.bam
    DELETEMERGED=$MERGED
    echo "Merging to $MERGED"
    [ -f $MERGED ] || samtools merge - $INPUTBAMS >$MERGED
fi

#
# Index merged file if needed
#
[ -f $MERGED.bai ] || samtools index $MERGED

#
# Only use reads mapped to given chromosomes
#
echo "Filtering to $FILTERED"
[ -f $FILTERED ] || samtools view -b $MERGED $CHRS >$FILTERED

#
# Get read statistics
#
STATS=$(samtools flagstat $FILTERED)
echo "$STATS"
MAPPED=$(echo "$STATS" | grep mapped | head -1 | cut -d' ' -f1)
echo "# mapped: $MAPPED"
SAMPLEPROB=$(bc -l <<< "50000000/$MAPPED")
echo "Sample prob: $SAMPLEPROB"

#
# Downsample reads
#
echo "Down-sampling to $OUTPUT"
[ -f $OUTPUT ] || samtools view -s $SAMPLEPROB -b $FILTERED >$OUTPUT

#
# Tidy up
#
rm $FILTERED $DELETEMERGED

#
# Index the resulting bam
#
echo "Indexing"
[ -f $OUTPUT.bai ] || samtools index $OUTPUT

#
# Report completion
#
echo "Done: $CELL"
